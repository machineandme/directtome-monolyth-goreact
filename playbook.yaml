---
- name: Setup
  hosts: directtome
  handlers:
    - name: Setup systemd
      import_tasks: ansible/snippets/systemdservice.yaml
  tasks:
    - name: Check is OS has systemd
      command: "true"
      notify: Check is OS has systemd
    - meta: flush_handlers
    - name: Download golang
      shell: wget -q "https://golang.org/dl/go1.15.6.linux-amd64.tar.gz" -P /tmp/
      args:
        creates: /tmp/go1.15.6.linux-amd64.tar.gz
    - name: Install golang
      unarchive:
        src: /tmp/go1.15.6.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: true
        mode: "777"
    - name: Download Caddy
      shell: wget -q "https://caddyserver.com/api/download?os=linux&arch=amd64&idempotency=66843533211574" -O /tmp/caddy
      args:
        creates: /tmp/caddy
    - name: Install Caddy
      copy:
        src: /tmp/caddy
        dest: /usr/bin/
        remote_src: true
        mode: a+x
    - name: Ensure group for Caddy exists
      group:
        name: caddy
        state: present
    - name: Adding user for Caddy
      user:
        name: caddy
        group: caddy
        comment: Caddy web server
        system: yes
        home: /var/lib/caddy
        shell: /usr/sbin/nologin
    - name: Create a directory for caddy
      file:
        path: /var/caddy/
        state: directory
        mode: '0777'
    - name: Setting systemd template for Caddy
      set_fact:
        systemdservice_name: caddy
        systemdservice_additional: |
          WorkingDirectory=/var/caddy/
          User=caddy
          Group=caddy
          TimeoutStopSec=5s
          LimitNOFILE=1048576
          LimitNPROC=512
          PrivateTmp=true
          ProtectSystem=full
          AmbientCapabilities=CAP_NET_BIND_SERVICE
        systemdservice_execute: /usr/bin/caddy run --environ --resume
    - name: Create caddy service in systemd
      command: "true"
      notify: Create X service in systemd
    - name: Enable and restart caddy service
      command: "true"
      notify: Enable and restart X service
    - meta: flush_handlers
    - name: Upload files
      synchronize:
        src: ./src/
        dest: /opt/application/
    - name: Create a directory for binaries
      file:
        path: /opt/application/bin/
        state: directory
        mode: "0755"
    - name: Build Go
      shell: /usr/local/go/bin/go build -o /opt/application/bin/be .
      args:
        chdir: /opt/application/backend/
    - name: Change mode of backend binary
      file:
        path: /opt/application/bin/be
        mode: a+x
    - name: Setting systemd template for application_backend
      set_fact:
        systemdservice_name: application_backend
        systemdservice_additional: ""
        systemdservice_execute: /opt/application/bin/be
    - name: Create application_backend service in systemd
      command: "true"
      notify: Create X service in systemd
    - name: Enable and restart application_backend service
      command: "true"
      notify: Enable and restart X service
    - meta: flush_handlers
    - name: Copy test index
      copy:
        src: /opt/application/frontend/_test/index.html
        dest: /var/caddy/
        remote_src: true
    - name: Copy test icon
      copy:
        src: /opt/application/frontend/_test/g1302.png
        dest: /var/caddy/
        remote_src: true
