---
- name: Setup
  hosts: directtome
  handlers:
    - name: Setup systemd
      import_tasks: ansible/snippets/systemdservice.yaml
  roles:
    - { role: datadog.datadog, become: yes }
  vars:
    datadog_api_key: "5faebf15670514349970e9d499bf3ca8"
    datadog_site: "datadoghq.com"
    datadog_config:
      tags:
        - "region:Frankfurt1"
        - "availability-zone:digital-ocean"
        - "instance-type:directtome"
      logs_enabled: true
      process_config:
        enabled: "true"
    datadog_checks:
      systemd:
        init_config:
        instances:
          - unit_names:
              - application_backend
      journald:
        logs:
          - type: journald
            include_units:
              - application_backend.service
      application_backend:
        logs:
          - type: file
            path: /var/log/application_backend.log.json
            service: application_backend
            source: application_backend
  tasks:
    - name: Check is OS has systemd
      command: "true"
      notify: Check is OS has systemd
    - meta: flush_handlers
    - name: Download golang
      shell: wget -q "https://golang.org/dl/go1.15.6.linux-amd64.tar.gz" -P /tmp/
      args:
        creates: /tmp/go1.15.6.linux-amd64.tar.gz
    - name: Install golang
      unarchive:
        src: /tmp/go1.15.6.linux-amd64.tar.gz
        dest: /usr/local
        remote_src: true
        mode: "777"
    - name: Upload backend files
      synchronize:
        src: ./backend
        dest: /opt/application/backend
    - name: Upload frontend files
      synchronize:
        src: ./frontend
        dest: /opt/application/frontend
    - name: Create a directory for binaries
      file:
        path: /opt/application/bin/
        state: directory
        mode: "0755"
    - name: Build Go
      shell: /usr/local/go/bin/go build -o /opt/application/bin/be .
      args:
        chdir: /opt/application/backend/
    - name: Change mode of backend binary
      file:
        path: /opt/application/bin/be
        mode: a+x
    - name: Setting systemd template for application_backend
      set_fact:
        systemdservice_name: application_backend
        systemdservice_additional: ""
        systemdservice_execute: /opt/application/bin/be
    - name: Create application_backend service in systemd
      command: "true"
      notify: Create X service in systemd
    - name: Enable and restart application_backend service
      command: "true"
      notify: Enable and restart X service
    - meta: flush_handlers
